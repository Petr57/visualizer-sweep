;#include <sweep.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x50
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_standby=0x40
;PCODE: $00000006 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000007 VOL: 0
	#endif
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 0
;
;eeprom int x=0;
;char next_symbol=0;
;
;void main(void)
; 0000 0007 {

	.CSEG
;PCODE: $0000000A VOL: 0
; 0000 0008     #asm("sei")      //set enable interrupts
;PCODE: $0000000B VOL: 0
	sei
;PCODE: $0000000C VOL: 0
; 0000 0009     sweep_init();
;PCODE: $0000000D VOL: 0
; 0000 000A     while(1)
;PCODE: $0000000E VOL: 0
; 0000 000B     {
; 0000 000C         try_update();
;PCODE: $0000000F VOL: 0
; 0000 000D         #asm("sleep")
;PCODE: $00000010 VOL: 0
	sleep
;PCODE: $00000011 VOL: 0
; 0000 000E         #asm("nop")
;PCODE: $00000012 VOL: 0
	nop
;PCODE: $00000013 VOL: 0
; 0000 000F     }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0010     x=0;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0011 }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
